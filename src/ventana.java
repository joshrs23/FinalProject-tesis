
import java.net.ServerSocket;
import java.net.Socket;
import java.net.URL;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author joserafael
 */
public class ventana extends javax.swing.JFrame {

    /**
     * Creates new form ventana
     */
    
 private ArrayList mensajes;
 private servidorI servidor;
 private String iconoOff,iconoOn,iconoPcOn,iconoPcOff;
 private ImageIcon iconpcOff,iconpcOn,iconOn;
 private int contadorPc=0,contadorMensaje=0,tamañoMenor=-99999999;
    public ventana() {
        initComponents();
        mensajes=new ArrayList();
        iconoOff = "img/off.png";
        iconoOn = "img/on.png";
        iconoPcOff = "img/pcOff.png";
        iconoPcOn = "img/pcOn.png";
        URL url = this.getClass().getResource(iconoOn);  
        iconOn = new ImageIcon(url); 
        url = this.getClass().getResource(iconoPcOn);
        iconpcOn = new ImageIcon(url); 
        jLabel9.setIcon(iconOn);
        jButton1.setText("Comenzar");
        jLabel9.setText("Servidor en linea");
        mensajes=new ArrayList();
        jTextArea1.setEditable(false); 
    }
    public void PasarServ(servidorI serv)
    {
        servidor=serv;
    }
    public void cliente()
    {
        contadorPc=contadorPc+1;
        if(contadorPc==1)
        {
            jLabel1.setIcon(iconpcOn);
            jLabel5.setText("  Conectado");
        }
        else
        {
            if(contadorPc==2)
            {
                jLabel2.setIcon(iconpcOn);
                jLabel6.setText("  Conectado");
            }
            else
            {
                if(contadorPc==3)
                {
                    jLabel3.setIcon(iconpcOn);
                    jLabel7.setText("  Conectado");
                }
                else
                {
                    if(contadorPc==4)
                    {
                        jLabel4.setIcon(iconpcOn);
                        jLabel8.setText("  Conectado");
                    }
                }
            }
        }
    }

    public void mensajes(String mensaje)
    {   
        contadorMensaje=contadorMensaje+1;
        int i=0,cont=0;
        cont=Integer.parseInt(mensaje.substring(i,i+1));
        i=i+1;
        String tamaño="";
        while(!mensaje.substring(i,i+1).equals(";")){
            tamaño=tamaño+mensaje.substring(i,i+1);
            i=i+1;
        }
        i=i+1;
        mensaje=mensaje.substring(i);
        if(tamañoMenor<Integer.parseInt(tamaño)){//se busca el tamaño mas pqño para la matriz de mensajes
            tamañoMenor=Integer.parseInt(tamaño);
        }
        
        mensajes.add(mensaje+"-");
        if(cont==1)
        {
            jTextField1.setText(mensaje);
        }
        else
        {
            if(cont==2)
            {
                jTextField2.setText(mensaje);
            }
            else
            {
                if(cont==3)
                {
                    jTextField3.setText(mensaje);
                }
                else
                {
                    if(cont==4)
                    {
                        jTextField4.setText(mensaje);
                    }
                }
            }
        }
       // jLabel9.setIcon(iconOn);

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Nodos clientes"));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pcOff.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pcOff.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pcOff.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pcOff.png"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Desconectado");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Desconectado");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Desconectado");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Desconectado");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel10.setText("Mensaje a");

        jLabel11.setText("Mensaje b");

        jLabel12.setText("Mensaje c");

        jLabel13.setText("Mensaje d");

        jTextField1.setEditable(false);

        jTextField2.setEditable(false);

        jTextField3.setEditable(false);

        jTextField4.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(jLabel1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jLabel5))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(jLabel10)))
                        .addGap(88, 88, 88))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(jLabel2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(200, 200, 200)
                                .addComponent(jLabel4)
                                .addGap(97, 97, 97))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(174, 174, 174)
                                .addComponent(jLabel8)
                                .addGap(83, 83, 83))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jLabel11))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(144, 144, 144))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(100, 100, 100))))))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(526, 526, 526)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(470, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(762, Short.MAX_VALUE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(234, 234, 234)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel12)
                        .addComponent(jLabel13))
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator2)
                    .addContainerGap()))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator3)
                    .addContainerGap()))
        );

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setText("jLabel9");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ecuaciones"));

        jLabel14.setText("Ecuaciones generadas");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jLabel9))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Iniciar Servidor");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
                   
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public int [][] llenarCon0(int a[][], int contadorP, int tamañoM)
    {
        for(int i=0;i<contadorP;i++){
            for(int j=0;j<tamañoM;j++){
                a[i][j]=0;
            }
        }
        return a;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

      int i=0,j=0,col=0,fila=0,a[][]=new int[contadorPc][this.tamañoMenor];
      ArrayList mensajesMostrar=new ArrayList();
      a=llenarCon0(a,contadorPc,tamañoMenor);
      String todo="",numero="",mensajeNo="";
        if(this.contadorPc>1 && contadorPc==this.contadorMensaje){//asegurando que hay mas de un cliente y que cada uno tiene un mensaje
            //llenado de la matriz de mensajes
            while(j<this.mensajes.size()){//recorre el arrayList para sacar mensaje de cada usuario
                todo=""+mensajes.get(j);
                //while(i<todo.length()){
                while(col<tamañoMenor){
                    if(i<todo.length()){
                        if(!todo.substring(i,i+1).equals("-")){//aqui preguntar por el tamaño del sub si paso se llena de 0
                            numero=numero+todo.substring(i,i+1);
                        }
                        else{
                            if(todo.substring(i,i+1).equals("-")){
                                a[fila][col]=Integer.parseInt(numero);
                                numero="";
                                col=col+1;
                            }
                        }
                        i=i+1;
                    }
                    else{
                        a[fila][col]=0;
                        col=col+1;
                    }
                   /* if(col==tamañoMenor){//tocara borrar esto pq corta el tamaño 
                        
                        i=todo.length();
                    }*/
                }  
             col=0;
             fila=fila+1;
             j=j+1;   
             i=0;
            }
            
            //escribir la matriz 
            String texto="";
            for(int u=0;u<tamañoMenor;u++){
                for(int k=0;k<contadorPc;k++){
                    texto=texto+" "+a[k][u];
                     if(k==0){
                            mensajeNo="a = "+a[k][u];
                        }
                        else{
                            if(k==1){
                            mensajeNo=mensajeNo+" b = "+a[k][u];
                            }
                            else{
                                if(k==2){
                                mensajeNo=mensajeNo+" c = "+a[k][u];
                                }
                                else{
                                    if(k==3){
                                    mensajeNo=mensajeNo+" d = "+a[k][u];
                                    }
                                    else{

                                    }
                                }
                            }
                        }
                }
                mensajesMostrar.add(mensajeNo);
                mensajeNo="";
               texto=texto+"\n";
            }
            System.out.println(texto);
            
            //aqui ya va comenzar el envio a cramer
            int posicion=0,coeficientes[][],enviar[][],va=0,va1=0,contM=1;
            Random x = new java.util.Random();
            boolean li=false;
            cramer inicio = new cramer();
            String pantallaEcuaciones="Mensajes # "+contM+"\n"+mensajesMostrar.get(0)+"\nCoeficientes generados\n";
            while(posicion<tamañoMenor){//dependiendo cuantos mensajes sean esta el ciclo
                coeficientes=new int[contadorPc][contadorPc];// para comprobar que son l.I se enviaran a cramer
                enviar=new int[contadorPc][contadorPc+1];//el que enviaremos a servidor con el valor de x# averiguado cuando ya este comprabado que coecientes son l.i
                while(li==false){
                        for(int k=0;k<contadorPc;k++){
                            pantallaEcuaciones=pantallaEcuaciones+"\nEcuacion "+(k+1)+":\n";
                            for(int u=0;u<contadorPc;u++){
                                coeficientes[k][u]=x.nextInt(99);//se crean los coeficientes random  modifique 99 por 9
                                //pantallaEcuaciones=pantallaEcuaciones+coeficientes[k][u]+" ";  //aqui es para el primero a+b..+d=xi
                                if(va1==0){
                                        pantallaEcuaciones=pantallaEcuaciones+coeficientes[k][u]+"a";
                                    }
                                    else{
                                        if(va1==1){
                                        pantallaEcuaciones=pantallaEcuaciones+"+"+coeficientes[k][u]+"b";
                                        }
                                        else{
                                            if(va1==2){
                                            pantallaEcuaciones=pantallaEcuaciones+"+"+coeficientes[k][u]+"c";
                                            }
                                            else{
                                                if(va1==3){
                                                pantallaEcuaciones=pantallaEcuaciones+"+"+coeficientes[k][u]+"d";
                                                }
                                                else{

                                                }
                                            }
                                        }
                                    }
                                va1=va1+1;
                            }
                            va1=0;
                            if(va==0){
                                pantallaEcuaciones=pantallaEcuaciones+" = x"+(va+1)+"\n";
                            }
                            else{
                                if(va==1){
                                pantallaEcuaciones=pantallaEcuaciones+" = x"+(va+1)+"\n";
                                }
                                else{
                                    if(va==2){
                                    pantallaEcuaciones=pantallaEcuaciones+" = x"+(va+1)+"\n";
                                    }
                                    else{
                                        if(va==3){
                                        pantallaEcuaciones=pantallaEcuaciones+" = x"+(va+1)+"\n";
                                        }
                                        else{

                                        }
                                    }
                                }
                            }
                            va=va+1;
                       }
                        va=0;
                        //aqui toca poner si es <4 o ==4 toca hacer un ciclo
                        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                        int resultadoL=0,kk=0,uu=0,valor4=0,signo=0;
                        if(contadorPc<4){
                             resultadoL=inicio.determinante(coeficientes, contadorPc, contadorPc);
                             if(resultadoL!=0){
                                li=true; 
                             }
                        }
                        else{
                            int cont=0,coeficientes2[][]=new int[3][3];
                            while(cont<4){
                                for(int k=0;k<4;k++){
                                    for(int u=0;u<4;u++){
                                      if(k!=cont && u!=0){
                                          coeficientes2[kk][uu]=coeficientes[k][u];
                                          uu=uu+1;
                                      }
                                    }
                                    if(uu==3){
                                        uu=0;
                                        kk=kk+1;
                                    }
                                }
                                if(cont%2==0){
                                    signo=1;
                                }
                                else{
                                    signo=-1;
                                }
                                valor4=(inicio.determinante(coeficientes2, 3, 3)*coeficientes[cont][0]*signo)+valor4;
                                kk=0;
                                uu=0;
                                cont=cont+1;
                            }
                            if(valor4!=0){
                                li=true;
                            }
                            System.out.println("resultado total : "+valor4);
                        }
                        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////solo falta es poner esa de 4 como una funcion para cuando vaya a sacar el mensaje hacerlo igual pero q devuelva el valor y dps preguntar si !=0 si li=true
                        if(li==false){
                            pantallaEcuaciones=pantallaEcuaciones+"\n\nError coeficientes son linealmente dependientes, se prodecerar a generar nuevos valores\nCoeficientes generados\n\n";
                            jTextArea1.setText(pantallaEcuaciones);
                        }
                }
                //ya se sabe que coeficientes son L.i y se procede para completar valores x1...x# para enviar al servidor a decodificar
                jTextArea1.setText(pantallaEcuaciones);
                int suma=0;
                va=0;va1=0;
                String loqueva="\n\nPaquete a enviar:\n\n",paquete="";
                for(int k=0;k<contadorPc;k++){
                    loqueva=loqueva+"[ ";
                    for(int u=0;u<contadorPc;u++){
                        enviar[k][u]=coeficientes[k][u];
                        paquete=paquete+coeficientes[k][u]+";";
                        suma=suma+(coeficientes[k][u]*a[u][posicion]);//aqui se multiplica y suma los coeficientes con los valores mandados
                        
                        loqueva=loqueva+enviar[k][u]+"   ";//<------------aqui los x1+...+x4
                        /*if(va1==0){
                            loqueva=loqueva+enviar[k][u]+"a";
                        }
                        else{
                            if(va1==1){
                            loqueva=loqueva+"+"+enviar[k][u]+"b";
                            }
                            else{
                                if(va1==2){
                                loqueva=loqueva+"+"+enviar[k][u]+"c";
                                }
                                else{
                                    if(va1==3){
                                    loqueva=loqueva+"+"+enviar[k][u]+"d";
                                    }
                                    else{

                                    }
                                }
                            }
                        }*/
                    //va1=va1+1;
                        if(u+1==contadorPc){
                            enviar[k][u+1]=suma;
                            paquete=paquete+suma+";";
                            //va1=0;
                            loqueva=loqueva+enviar[k][u+1]+"   ";//<--------aqui =xi ya como valor
                            /*if(va==0){
                                loqueva=loqueva+" = "+enviar[k][u+1]+"\n";
                            }
                            else{
                                if(va==1){
                                loqueva=loqueva+" = "+enviar[k][u+1]+"\n";
                                }
                                else{
                                    if(va==2){
                                    loqueva=loqueva+" = "+enviar[k][u+1]+"\n";
                                    }
                                    else{
                                        if(va==3){
                                        loqueva=loqueva+" = "+enviar[k][u+1]+"\n";
                                        }
                                        else{

                                        }
                                    }
                                }
                            }*/
                            //va=va+1;
                            suma=0;
                        }
                    }
                    loqueva=loqueva+"]\n";
                }
                va=0;
                jTextArea1.setText(pantallaEcuaciones+loqueva);
                posicion=posicion+1;
                if(posicion<tamañoMenor){
                    contM=contM+1;
                    pantallaEcuaciones=jTextArea1.getText()+"\n\nMensajes # "+contM+"\n"+mensajesMostrar.get(posicion)+"\nCoeficientes generados\n";
                }
                li=false;
                //aqui se va enviar al servidor el arreglo enviar
                servidor.enviarMensajeServidor(paquete);
            }
        }
        else{
            //poner alerta que faltan usuario o mensajes
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
